// Place your key bindings in this file to override the defaults
[
  // Movements
  {
    "command": "composerMode.agent",
    "key": "cmd+i"
  },
  {
    "command": "workbench.action.navigateLeft",
    "key": "ctrl+h"
  },
  {
    "command": "workbench.action.navigateUp",
    "key": "ctrl+j"
  },
  {
    "command": "workbench.action.navigateDown",
    "key": "ctrl+k"
  },
  {
    "command": "workbench.action.navigateRight",
    "key": "ctrl+l"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "space space",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  // from neovim
  {
    "command": "editor.action.rename",
    "key": "space r n",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "g d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToReferences",
    "key": "g r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToImplementation",
    "key": "g i",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  // Search for things
  {
    "command": "workbench.action.quickOpen",
    "key": "space ;",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.findInFiles",
    "key": "space '",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space /",
    "command": "fuzzySearch.activeTextEditor",
    "when": "vim.mode == 'Normal' && editorFocus"
  },
  {
    "command": "workbench.action.gotoSymbol",
    "key": "space s d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space s w",
    "command": "extension.searchUnderCursor",
    "when": "vim.mode == 'Normal' && editorFocus"
  },
  {
    // space w -> save file
    "key": "space w",
    "command": "workbench.action.files.save",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  {
    // space q -> close tab/close item
    "key": "space q",
    "command": "workbench.action.closeActiveEditor",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  {
    // space [ -> go back
    "key": "space [",
    "command": "workbench.action.navigateBack",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  {
    // space ] -> go forwards
    "key": "space ]",
    "command": "workbench.action.navigateForward",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  // Accept suggestion with Ctrl+E
  {
    "key": "ctrl+e",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible"
  },
  // Trigger autocomplete with Ctrl+X
  {
    "key": "ctrl+x",
    "command": "editor.action.triggerSuggest",
    "when": "editorTextFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "command": "runCommands",
    "key": "space e",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "command": "runCommands",
    "key": "space e",
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "space e",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible"
  },
  // Coding
  {
    "command": "editor.action.codeAction",
    "key": "space i",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.moveLinesUpAction",
    "key": "shift-k",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "editor.action.moveLinesDownAction",
    "key": "shift-j",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "editor.action.showHover",
    "key": "shift-k",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  {
    "command": "workbench.action.closeActiveEditor",
    "key": "space b d",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "workbench.action.closeOtherEditors",
    "key": "space b o",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "args": {
      "commands": ["workbench.view.scm", "workbench.scm.focus"]
    },
    "command": "runCommands",
    "key": "space g s",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "lazygit.openLazygit",
    "key": "space g l",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "ctrl-n",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  // File Explorer
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    },
    "command": "runCommands",
    "key": "shift-s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "list.toggleExpand",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },
  // Debug
  {
    "command": "workbench.action.debug.selectandstart",
    "key": "space d a",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debuggersAvailable"
  },
  {
    "command": "workbench.action.debug.stop",
    "key": "space d t",
    "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && !focusedSessionIsAttached"
  },
  {
    "command": "workbench.action.debug.stepOver",
    "key": "space d o",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "editor.debug.action.toggleBreakpoint",
    "key": "space d b",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.debug.action.showDebugHover",
    "key": "space d e",
    "when": "vim.mode == 'Normal' && editorTextFocus && inDebugMode && debugState == 'stopped'"
  },
  {
    "command": "workbench.action.debug.continue",
    "key": "space d c",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },
  // Error & Diagnostic Navigation
  {
    "command": "editor.action.marker.next",
    "key": "] e",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.marker.prev",
    "key": "[ e",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.marker.nextInFiles",
    "key": "] d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.marker.prevInFiles",
    "key": "[ d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  }
]
